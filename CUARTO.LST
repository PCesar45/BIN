Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 1
cuarto.ASM



      1				     ;-------------------------------------------;
      2				     ;Estructura de un programa	en ensamblador,	 ;
      3				     ;para arquitectura	8086/8088/80306	mips	 ;
      4				     ;Creado por: Ing. Carlos Benavides	C. MsC.	 ;
      5				     ;Propósito: Docente, académico, ejemplo.	 ;
      6				     ;Forma de compilación:			 ;
      7				     ;	Usando el turbo	assembler de borland 4.	 ;
      8				     ;	  tasm /zi /l cuarto[.asm]		;
      9				     ;	  tlink	/v cuarto[.oobj]		;
     10				     ;						 ;
     11				     ; y si lo quiere depurar turbo debuger	 ;
     12				     ;						 ;
     13				     ;	    td cuarto[.exe]			;
     14				     ; FUM: Mayo 16, 2003.			 ;
     15				     ;-------------------------------------------;
     16
     17	0000			     SSeg Segment para Stack 'Stack'
     18
     19	0000  40*(53 65	67 53 74  +	  db 64	Dup ('SegStack ')
     20	      61 63 6B 20)
     21
     22	0240			     SSeg EndS
     23
     24	0000			     SData Segment para	'Data'
     25
     26	0000  48 6F 6C 61 20 4D	75+	  Message db 'Hola Mundo',10,13,'$'
     27	      6E 64 6F 0A 0D 24
     28	000D  00			      Col db 0
     29	000E  00			  Fil db 0
     30
     31	000F			     SData EndS
     32
     33				     ;-------------------------------;
     34				     ;	   Definición de Macros		     ;
     35				     ;(afuera del segmento de código);
     36				     ;-------------------------------;
     37
     38				     PushA Macro
     39					    push      ax						     ;Guarda los todos los  +
     40				     registro en...
     41					    push      bx						     ;...la pila del	    +
     42				     programa.
     43					    push      cx						     ;Preparación para	    +
     44				     rutinas
     45					    push      dx						     ;Debe tener cuidado de +
     46				     llamar a la...
     47					    push      si						     ;...siguiente macro    +
     48				     (PopAllRegs) para...
     49					    push      di						     ;poner equilibrar la   +
     50				     pila...
     51					    push      bp						     ;...sino lo hace el    +
     52				     programa se cae...
     53					    push      sp						     ;...y da un error.
     54					    push      ds						     ;Note que el último    +
     55				     elemento del pushallregs...
     56					    push      es						     ;...es el primer	    +
     57				     elemento en salir en popallregs.
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 2
cuarto.ASM



     58					    push      ss
     59					    pushf								     ;Guarda el	    +
     60				     registro de banderas en la	pila.
     61				     EndM									     ;Su contra	    +
     62				     parte es la macro siguiente.
     63
     64				     PopA Macro
     65					    popf		     ;...la pila del programa.
     66					    pop	      ss	     ;Esto se hace después de la llamada a una rutina
     67					    pop	      es	     ;Debe tener cuidado de llamar a esta...
     68					    pop	      ds	     ;...macro (PopAllRegs) para...
     69					    pop	      sp	     ;poner equilibrar la pila...
     70					    pop	      bp	     ;...solamente después de haber...
     71					    pop	      di	     ;...llamado antes a pushallregs.
     72					    pop	      si	     ; Sino se produce un error	en el programa.
     73					    pop	      dx
     74					    pop	      cx
     75					    pop	      bx
     76					    pop	      ax
     77				     EndM
     78
     79				     ClearScreen Macro TextColor
     80					    PushA
     81					    mov	      ah,07	     ;Prepara servicio 07 para la int 10h. (desplazamiento de	    +
     82				     ventana hacia abajo).
     83					    mov	      al,25	     ;Número de	líneas por desplazar en	este caso total	de filas 25.
     84					    mov	      bh,TextColor   ;Atributo con que se va a desplazar; es decir; color. 00 =	    +
     85				     negro.
     86					    mov	      ch,00	     ;En donde comienza: fila de la esquina superior izquierda.
     87					    mov	      cl,00	     ;En donde comienza: columna de la esquina superior	izquierda.
     88					    mov	      dh,25	     ;En donde termina:	 fila de la esquina inferior derecha.
     89					    mov	      dl,80	     ;En donde termina:	 columna de la esquina inferior	derecha.
     90					    int	      10h	     ;ejecute la int 10h/ servicio 07h,	desplaze la ventana hacia   +
     91				     abajo.
     92					    PopA
     93				     EndM
     94
     95				     PrintfS Macro String
     96					    lea	      dx,String	     ;Coloca la	dirección del desplazamiento de	la etiqueta	    +
     97				     DS:Message
     98					    mov	      ah,09	     ;parámetro	09 del servicio	de int 21 (imprimir en pantalla	    +
     99				     cadena terminada en $)
    100					    int	      21h	     ;ejecute la interrupción, e imprima en pantalla.
    101				     EndM
    102
    103				     PrintfC Macro Caracter, Atributo
    104					    PushA		     ;Guarde todos los registros.
    105					    mov	      ah,09	     ;Servicio de int 21h / 02 imprimir	un caracter en pantalla.
    106					    mov	      dl,Caracter    ;Caracter Ascii a imprimir.
    107					    mov	      bh,00
    108					    mov	      bl,Atributo
    109					    and	      bl,00001111b
    110					    mov	      cx,1
    111					    int	      10h	     ;ejecute la interrupción, e imprima en pantalla.
    112					    PopA		     ;Saque todos los registros.
    113				     EndM
    114
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 3
cuarto.ASM



    115				     GotoXY Macro X,Y
    116					    PushA
    117					    mov	      ah,02
    118					    mov	      bh,00
    119					    mov	      dl,X
    120					    mov	      dh,Y
    121					    int	      10h
    122					    PopA
    123				     EndM
    124
    125				     WhereXY Macro
    126					    PushA
    127					    mov	      ah,03
    128					    mov	      bh,00
    129					    int	      10h
    130					    mov	      Col,dl
    131					    mov	      Fil,dh
    132					    PopA
    133				     EndM
    134
    135				     PrintHex Macro Numero
    136					    local     hex, exit
    137					    PushA
    138					    mov	      al,Numero
    139					    cmp	      al,09h
    140					    jnle      hex
    141					    add	      al,48
    142					    PrintfC   al,Numero
    143					    jmp	short exit
    144				       hex: add	      al,55
    145					    PrintfC   al,Numero
    146				      exit: PopA
    147				     EndM
    148
    149	0000			     CSeg Segment para public 'Code'  ;Define el segmento de código para tasm.
    150
    151
    152
    153	0000			      main Proc	Far		      ;Procedimiento principal como main{ } en C.
    154					   Assume CS:CSeg, SS:SSeg    ;Asignación de los segmentos a los registro de segmentos del  +
    155				     CPU.
    156
    157	0000  1E			     push     DS	      ;Guardar posición	del reg	DS en la pila.
    158	0001  33 C0			     xor      ax,ax	      ;Pone en cero al reg ax.
    159	0003  50			     push     ax	      ;Guarda el desplazamiento	cero en	la pila.
    160	0004  B8 0000s			     mov      ax,SData	      ;Mueve la	posición de SData al reg ax.
    161	0007  8E D8			     mov      DS,ax	      ;Mueve la	posición de ax (SData) al reg DS.
    162	0009  8E C0			     mov      ES,ax	      ;Mueve la	posición de ax (SData) al reg ES.
    163
    164					     PushA		      ;guardar el estado del CPU.
1   165	000B  50			    push      ax						     ;Guarda los todos los  +
    166				     registro en...
1   167	000C  53			    push      bx						     ;...la pila del	    +
    168				     programa.
1   169	000D  51			    push      cx						     ;Preparación para	    +
    170				     rutinas
1   171	000E  52			    push      dx						     ;Debe tener cuidado de +
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 4
cuarto.ASM



    172				     llamar a la...
1   173	000F  56			    push      si						     ;...siguiente macro    +
    174				     (PopAllRegs) para...
1   175	0010  57			    push      di						     ;poner equilibrar la   +
    176				     pila...
1   177	0011  55			    push      bp						     ;...sino lo hace el    +
    178				     programa se cae...
1   179	0012  54			    push      sp						     ;...y da un error.
1   180	0013  1E			    push      ds						     ;Note que el último    +
    181				     elemento del pushallregs...
1   182	0014  06			    push      es						     ;...es el primer	    +
    183				     elemento en salir en popallregs.
1   184	0015  16			    push      ss
1   185	0016  9C			    pushf								     ;Guarda el	    +
    186				     registro de banderas en la	pila.
    187					     ClearScreen 0fh	      ;limpiar la pantalla y preparar el color del texto.
1   188					    PushA
2   189	0017  50			    push      ax						     ;Guarda los todos los  +
    190				     registro en...
2   191	0018  53			    push      bx						     ;...la pila del	    +
    192				     programa.
2   193	0019  51			    push      cx						     ;Preparación para	    +
    194				     rutinas
2   195	001A  52			    push      dx						     ;Debe tener cuidado de +
    196				     llamar a la...
2   197	001B  56			    push      si						     ;...siguiente macro    +
    198				     (PopAllRegs) para...
2   199	001C  57			    push      di						     ;poner equilibrar la   +
    200				     pila...
2   201	001D  55			    push      bp						     ;...sino lo hace el    +
    202				     programa se cae...
2   203	001E  54			    push      sp						     ;...y da un error.
2   204	001F  1E			    push      ds						     ;Note que el último    +
    205				     elemento del pushallregs...
2   206	0020  06			    push      es						     ;...es el primer	    +
    207				     elemento en salir en popallregs.
2   208	0021  16			    push      ss
2   209	0022  9C			    pushf								     ;Guarda el	    +
    210				     registro de banderas en la	pila.
1   211	0023  B4 07			    mov	      ah,07	     ;Prepara servicio 07 para la int 10h. (desplazamiento de	    +
    212				     ventana hacia abajo).
1   213	0025  B0 19			    mov	      al,25	     ;Número de	líneas por desplazar en	este caso total	de filas 25.
1   214	0027  B7 0F			    mov	      bh,0fh ;Atributo con que se va a desplazar; es decir; color. 00 =	negro.
1   215	0029  B5 00			    mov	      ch,00	     ;En donde comienza: fila de la esquina superior izquierda.
1   216	002B  B1 00			    mov	      cl,00	     ;En donde comienza: columna de la esquina superior	izquierda.
1   217	002D  B6 19			    mov	      dh,25	     ;En donde termina:	 fila de la esquina inferior derecha.
1   218	002F  B2 50			    mov	      dl,80	     ;En donde termina:	 columna de la esquina inferior	derecha.
1   219	0031  CD 10			    int	      10h	     ;ejecute la int 10h/ servicio 07h,	desplaze la ventana hacia   +
    220				     abajo.
1   221					    PopA
2   222	0033  9D			    popf		     ;...la pila del programa.
2   223	0034  17			    pop	      ss	     ;Esto se hace después de la llamada a una rutina
2   224	0035  07			    pop	      es	     ;Debe tener cuidado de llamar a esta...
2   225	0036  1F			    pop	      ds	     ;...macro (PopAllRegs) para...
2   226	0037  5C			    pop	      sp	     ;poner equilibrar la pila...
2   227	0038  5D			    pop	      bp	     ;...solamente después de haber...
2   228	0039  5F			    pop	      di	     ;...llamado antes a pushallregs.
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 5
cuarto.ASM



2   229	003A  5E			    pop	      si	     ; Sino se produce un error	en el programa.
2   230	003B  5A			    pop	      dx
2   231	003C  59			    pop	      cx
2   232	003D  5B			    pop	      bx
2   233	003E  58			    pop	      ax
    234	003F  B1 00			     mov      cl,00	      ;imprimir	15 veces hola mundo.
    235	0041  FE C1		     ciclo1: inc      cl	      ;disminuya el ciclo.
    236	0043  8A D1			     mov      dl,cl	      ;preserve	el ciclo.
    237					     PrintHex dl	      ;conviertalo a ascii.
1   238					    PushA
2   239	0045  50			    push      ax						     ;Guarda los todos los  +
    240				     registro en...
2   241	0046  53			    push      bx						     ;...la pila del	    +
    242				     programa.
2   243	0047  51			    push      cx						     ;Preparación para	    +
    244				     rutinas
2   245	0048  52			    push      dx						     ;Debe tener cuidado de +
    246				     llamar a la...
2   247	0049  56			    push      si						     ;...siguiente macro    +
    248				     (PopAllRegs) para...
2   249	004A  57			    push      di						     ;poner equilibrar la   +
    250				     pila...
2   251	004B  55			    push      bp						     ;...sino lo hace el    +
    252				     programa se cae...
2   253	004C  54			    push      sp						     ;...y da un error.
2   254	004D  1E			    push      ds						     ;Note que el último    +
    255				     elemento del pushallregs...
2   256	004E  06			    push      es						     ;...es el primer	    +
    257				     elemento en salir en popallregs.
2   258	004F  16			    push      ss
2   259	0050  9C			    pushf								     ;Guarda el	    +
    260				     registro de banderas en la	pila.
1   261	0051  8A C2			    mov	      al,dl
1   262	0053  3C 09			    cmp	      al,09h
1   263	0055  7F 2C			    jnle      ??0000
1   264	0057  04 30			    add	      al,48
1   265					    PrintfC   al,dl
2   266					    PushA		     ;Guarde todos los registros.
3   267	0059  50			    push      ax						     ;Guarda los todos los  +
    268				     registro en...
3   269	005A  53			    push      bx						     ;...la pila del	    +
    270				     programa.
3   271	005B  51			    push      cx						     ;Preparación para	    +
    272				     rutinas
3   273	005C  52			    push      dx						     ;Debe tener cuidado de +
    274				     llamar a la...
3   275	005D  56			    push      si						     ;...siguiente macro    +
    276				     (PopAllRegs) para...
3   277	005E  57			    push      di						     ;poner equilibrar la   +
    278				     pila...
3   279	005F  55			    push      bp						     ;...sino lo hace el    +
    280				     programa se cae...
3   281	0060  54			    push      sp						     ;...y da un error.
3   282	0061  1E			    push      ds						     ;Note que el último    +
    283				     elemento del pushallregs...
3   284	0062  06			    push      es						     ;...es el primer	    +
    285				     elemento en salir en popallregs.
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 6
cuarto.ASM



3   286	0063  16			    push      ss
3   287	0064  9C			    pushf								     ;Guarda el	    +
    288				     registro de banderas en la	pila.
2   289	0065  B4 09			    mov	      ah,09	     ;Servicio de int 21h / 02 imprimir	un al en pantalla.
2   290	0067  8A D0			    mov	      dl,al    ;al Ascii a imprimir.
2   291	0069  B7 00			    mov	      bh,00
2   292	006B  8A DA			    mov	      bl,dl
2   293	006D  80 E3 0F			    and	      bl,00001111b
2   294	0070  B9 0001			    mov	      cx,1
2   295	0073  CD 10			    int	      10h	     ;ejecute la interrupción, e imprima en pantalla.
2   296					    PopA		     ;Saque todos los registros.
3   297	0075  9D			    popf		     ;...la pila del programa.
3   298	0076  17			    pop	      ss	     ;Esto se hace después de la llamada a una rutina
3   299	0077  07			    pop	      es	     ;Debe tener cuidado de llamar a esta...
3   300	0078  1F			    pop	      ds	     ;...macro (PopAllRegs) para...
3   301	0079  5C			    pop	      sp	     ;poner equilibrar la pila...
3   302	007A  5D			    pop	      bp	     ;...solamente después de haber...
3   303	007B  5F			    pop	      di	     ;...llamado antes a pushallregs.
3   304	007C  5E			    pop	      si	     ; Sino se produce un error	en el programa.
3   305	007D  5A			    pop	      dx
3   306	007E  59			    pop	      cx
3   307	007F  5B			    pop	      bx
3   308	0080  58			    pop	      ax
1   309	0081  EB 2A			    jmp	short ??0001
1   310	0083  04 37		       ??0000: add	 al,55
1   311					    PrintfC   al,dl
2   312					    PushA		     ;Guarde todos los registros.
3   313	0085  50			    push      ax						     ;Guarda los todos los  +
    314				     registro en...
3   315	0086  53			    push      bx						     ;...la pila del	    +
    316				     programa.
3   317	0087  51			    push      cx						     ;Preparación para	    +
    318				     rutinas
3   319	0088  52			    push      dx						     ;Debe tener cuidado de +
    320				     llamar a la...
3   321	0089  56			    push      si						     ;...siguiente macro    +
    322				     (PopAllRegs) para...
3   323	008A  57			    push      di						     ;poner equilibrar la   +
    324				     pila...
3   325	008B  55			    push      bp						     ;...sino lo hace el    +
    326				     programa se cae...
3   327	008C  54			    push      sp						     ;...y da un error.
3   328	008D  1E			    push      ds						     ;Note que el último    +
    329				     elemento del pushallregs...
3   330	008E  06			    push      es						     ;...es el primer	    +
    331				     elemento en salir en popallregs.
3   332	008F  16			    push      ss
3   333	0090  9C			    pushf								     ;Guarda el	    +
    334				     registro de banderas en la	pila.
2   335	0091  B4 09			    mov	      ah,09	     ;Servicio de int 21h / 02 imprimir	un al en pantalla.
2   336	0093  8A D0			    mov	      dl,al    ;al Ascii a imprimir.
2   337	0095  B7 00			    mov	      bh,00
2   338	0097  8A DA			    mov	      bl,dl
2   339	0099  80 E3 0F			    and	      bl,00001111b
2   340	009C  B9 0001			    mov	      cx,1
2   341	009F  CD 10			    int	      10h	     ;ejecute la interrupción, e imprima en pantalla.
2   342					    PopA		     ;Saque todos los registros.
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 7
cuarto.ASM



3   343	00A1  9D			    popf		     ;...la pila del programa.
3   344	00A2  17			    pop	      ss	     ;Esto se hace después de la llamada a una rutina
3   345	00A3  07			    pop	      es	     ;Debe tener cuidado de llamar a esta...
3   346	00A4  1F			    pop	      ds	     ;...macro (PopAllRegs) para...
3   347	00A5  5C			    pop	      sp	     ;poner equilibrar la pila...
3   348	00A6  5D			    pop	      bp	     ;...solamente después de haber...
3   349	00A7  5F			    pop	      di	     ;...llamado antes a pushallregs.
3   350	00A8  5E			    pop	      si	     ; Sino se produce un error	en el programa.
3   351	00A9  5A			    pop	      dx
3   352	00AA  59			    pop	      cx
3   353	00AB  5B			    pop	      bx
3   354	00AC  58			    pop	      ax
1   355	00AD			      ??0001: PopA
2   356	00AD  9D			    popf		     ;...la pila del programa.
2   357	00AE  17			    pop	      ss	     ;Esto se hace después de la llamada a una rutina
2   358	00AF  07			    pop	      es	     ;Debe tener cuidado de llamar a esta...
2   359	00B0  1F			    pop	      ds	     ;...macro (PopAllRegs) para...
2   360	00B1  5C			    pop	      sp	     ;poner equilibrar la pila...
2   361	00B2  5D			    pop	      bp	     ;...solamente después de haber...
2   362	00B3  5F			    pop	      di	     ;...llamado antes a pushallregs.
2   363	00B4  5E			    pop	      si	     ; Sino se produce un error	en el programa.
2   364	00B5  5A			    pop	      dx
2   365	00B6  59			    pop	      cx
2   366	00B7  5B			    pop	      bx
2   367	00B8  58			    pop	      ax
    368					     WhereXY
1   369					    PushA
2   370	00B9  50			    push      ax						     ;Guarda los todos los  +
    371				     registro en...
2   372	00BA  53			    push      bx						     ;...la pila del	    +
    373				     programa.
2   374	00BB  51			    push      cx						     ;Preparación para	    +
    375				     rutinas
2   376	00BC  52			    push      dx						     ;Debe tener cuidado de +
    377				     llamar a la...
2   378	00BD  56			    push      si						     ;...siguiente macro    +
    379				     (PopAllRegs) para...
2   380	00BE  57			    push      di						     ;poner equilibrar la   +
    381				     pila...
2   382	00BF  55			    push      bp						     ;...sino lo hace el    +
    383				     programa se cae...
2   384	00C0  54			    push      sp						     ;...y da un error.
2   385	00C1  1E			    push      ds						     ;Note que el último    +
    386				     elemento del pushallregs...
2   387	00C2  06			    push      es						     ;...es el primer	    +
    388				     elemento en salir en popallregs.
2   389	00C3  16			    push      ss
2   390	00C4  9C			    pushf								     ;Guarda el	    +
    391				     registro de banderas en la	pila.
1   392	00C5  B4 03			    mov	      ah,03
1   393	00C7  B7 00			    mov	      bh,00
1   394	00C9  CD 10			    int	      10h
1   395	00CB  88 16 000Dr		    mov	      Col,dl
**Error** cuarto.ASM(151) WHEREXY(5) Can't address with	currently ASSUMEd segment registers
1   396	00CF  88 36 000Er		    mov	      Fil,dh
**Error** cuarto.ASM(151) WHEREXY(6) Can't address with	currently ASSUMEd segment registers
1   397					    PopA
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 8
cuarto.ASM



2   398	00D3  9D			    popf		     ;...la pila del programa.
2   399	00D4  17			    pop	      ss	     ;Esto se hace después de la llamada a una rutina
2   400	00D5  07			    pop	      es	     ;Debe tener cuidado de llamar a esta...
2   401	00D6  1F			    pop	      ds	     ;...macro (PopAllRegs) para...
2   402	00D7  5C			    pop	      sp	     ;poner equilibrar la pila...
2   403	00D8  5D			    pop	      bp	     ;...solamente después de haber...
2   404	00D9  5F			    pop	      di	     ;...llamado antes a pushallregs.
2   405	00DA  5E			    pop	      si	     ; Sino se produce un error	en el programa.
2   406	00DB  5A			    pop	      dx
2   407	00DC  59			    pop	      cx
2   408	00DD  5B			    pop	      bx
2   409	00DE  58			    pop	      ax
    410	00DF  FE 06 000Dr		     inc      Col
**Error** cuarto.ASM(152) Can't	address	with currently ASSUMEd segment registers
    411					     GotoXY   Col,Fil
1   412					    PushA
2   413	00E3  50			    push      ax						     ;Guarda los todos los  +
    414				     registro en...
2   415	00E4  53			    push      bx						     ;...la pila del	    +
    416				     programa.
2   417	00E5  51			    push      cx						     ;Preparación para	    +
    418				     rutinas
2   419	00E6  52			    push      dx						     ;Debe tener cuidado de +
    420				     llamar a la...
2   421	00E7  56			    push      si						     ;...siguiente macro    +
    422				     (PopAllRegs) para...
2   423	00E8  57			    push      di						     ;poner equilibrar la   +
    424				     pila...
2   425	00E9  55			    push      bp						     ;...sino lo hace el    +
    426				     programa se cae...
2   427	00EA  54			    push      sp						     ;...y da un error.
2   428	00EB  1E			    push      ds						     ;Note que el último    +
    429				     elemento del pushallregs...
2   430	00EC  06			    push      es						     ;...es el primer	    +
    431				     elemento en salir en popallregs.
2   432	00ED  16			    push      ss
2   433	00EE  9C			    pushf								     ;Guarda el	    +
    434				     registro de banderas en la	pila.
1   435	00EF  B4 02			    mov	      ah,02
1   436	00F1  B7 00			    mov	      bh,00
1   437	00F3  8A 16 000Dr		    mov	      dl,Col
**Error** cuarto.ASM(153) GOTOXY(4) Can't address with currently ASSUMEd segment registers
1   438	00F7  8A 36 000Er		    mov	      dh,Fil
**Error** cuarto.ASM(153) GOTOXY(5) Can't address with currently ASSUMEd segment registers
1   439	00FB  CD 10			    int	      10h
1   440					    PopA
2   441	00FD  9D			    popf		     ;...la pila del programa.
2   442	00FE  17			    pop	      ss	     ;Esto se hace después de la llamada a una rutina
2   443	00FF  07			    pop	      es	     ;Debe tener cuidado de llamar a esta...
2   444	0100  1F			    pop	      ds	     ;...macro (PopAllRegs) para...
2   445	0101  5C			    pop	      sp	     ;poner equilibrar la pila...
2   446	0102  5D			    pop	      bp	     ;...solamente después de haber...
2   447	0103  5F			    pop	      di	     ;...llamado antes a pushallregs.
2   448	0104  5E			    pop	      si	     ; Sino se produce un error	en el programa.
2   449	0105  5A			    pop	      dx
2   450	0106  59			    pop	      cx
2   451	0107  5B			    pop	      bx
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 9
cuarto.ASM



2   452	0108  58			    pop	      ax
    453					     PrintfC  255,00	      ;imprime un espacio en blanco.
1   454					    PushA		     ;Guarde todos los registros.
2   455	0109  50			    push      ax						     ;Guarda los todos los  +
    456				     registro en...
2   457	010A  53			    push      bx						     ;...la pila del	    +
    458				     programa.
2   459	010B  51			    push      cx						     ;Preparación para	    +
    460				     rutinas
2   461	010C  52			    push      dx						     ;Debe tener cuidado de +
    462				     llamar a la...
2   463	010D  56			    push      si						     ;...siguiente macro    +
    464				     (PopAllRegs) para...
2   465	010E  57			    push      di						     ;poner equilibrar la   +
    466				     pila...
2   467	010F  55			    push      bp						     ;...sino lo hace el    +
    468				     programa se cae...
2   469	0110  54			    push      sp						     ;...y da un error.
2   470	0111  1E			    push      ds						     ;Note que el último    +
    471				     elemento del pushallregs...
2   472	0112  06			    push      es						     ;...es el primer	    +
    473				     elemento en salir en popallregs.
2   474	0113  16			    push      ss
2   475	0114  9C			    pushf								     ;Guarda el	    +
    476				     registro de banderas en la	pila.
1   477	0115  B4 09			    mov	      ah,09	     ;Servicio de int 21h / 02 imprimir	un 255 en pantalla.
1   478	0117  B2 FF			    mov	      dl,255	;255 Ascii a imprimir.
1   479	0119  B7 00			    mov	      bh,00
1   480	011B  B3 00			    mov	      bl,00
1   481	011D  80 E3 0F			    and	      bl,00001111b
1   482	0120  B9 0001			    mov	      cx,1
1   483	0123  CD 10			    int	      10h	     ;ejecute la interrupción, e imprima en pantalla.
1   484					    PopA		     ;Saque todos los registros.
2   485	0125  9D			    popf		     ;...la pila del programa.
2   486	0126  17			    pop	      ss	     ;Esto se hace después de la llamada a una rutina
2   487	0127  07			    pop	      es	     ;Debe tener cuidado de llamar a esta...
2   488	0128  1F			    pop	      ds	     ;...macro (PopAllRegs) para...
2   489	0129  5C			    pop	      sp	     ;poner equilibrar la pila...
2   490	012A  5D			    pop	      bp	     ;...solamente después de haber...
2   491	012B  5F			    pop	      di	     ;...llamado antes a pushallregs.
2   492	012C  5E			    pop	      si	     ; Sino se produce un error	en el programa.
2   493	012D  5A			    pop	      dx
2   494	012E  59			    pop	      cx
2   495	012F  5B			    pop	      bx
2   496	0130  58			    pop	      ax
    497					     WhereXY
1   498					    PushA
2   499	0131  50			    push      ax						     ;Guarda los todos los  +
    500				     registro en...
2   501	0132  53			    push      bx						     ;...la pila del	    +
    502				     programa.
2   503	0133  51			    push      cx						     ;Preparación para	    +
    504				     rutinas
2   505	0134  52			    push      dx						     ;Debe tener cuidado de +
    506				     llamar a la...
2   507	0135  56			    push      si						     ;...siguiente macro    +
    508				     (PopAllRegs) para...
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 10
cuarto.ASM



2   509	0136  57			    push      di						     ;poner equilibrar la   +
    510				     pila...
2   511	0137  55			    push      bp						     ;...sino lo hace el    +
    512				     programa se cae...
2   513	0138  54			    push      sp						     ;...y da un error.
2   514	0139  1E			    push      ds						     ;Note que el último    +
    515				     elemento del pushallregs...
2   516	013A  06			    push      es						     ;...es el primer	    +
    517				     elemento en salir en popallregs.
2   518	013B  16			    push      ss
2   519	013C  9C			    pushf								     ;Guarda el	    +
    520				     registro de banderas en la	pila.
1   521	013D  B4 03			    mov	      ah,03
1   522	013F  B7 00			    mov	      bh,00
1   523	0141  CD 10			    int	      10h
1   524	0143  88 16 000Dr		    mov	      Col,dl
**Error** cuarto.ASM(155) WHEREXY(5) Can't address with	currently ASSUMEd segment registers
1   525	0147  88 36 000Er		    mov	      Fil,dh
**Error** cuarto.ASM(155) WHEREXY(6) Can't address with	currently ASSUMEd segment registers
1   526					    PopA
2   527	014B  9D			    popf		     ;...la pila del programa.
2   528	014C  17			    pop	      ss	     ;Esto se hace después de la llamada a una rutina
2   529	014D  07			    pop	      es	     ;Debe tener cuidado de llamar a esta...
2   530	014E  1F			    pop	      ds	     ;...macro (PopAllRegs) para...
2   531	014F  5C			    pop	      sp	     ;poner equilibrar la pila...
2   532	0150  5D			    pop	      bp	     ;...solamente después de haber...
2   533	0151  5F			    pop	      di	     ;...llamado antes a pushallregs.
2   534	0152  5E			    pop	      si	     ; Sino se produce un error	en el programa.
2   535	0153  5A			    pop	      dx
2   536	0154  59			    pop	      cx
2   537	0155  5B			    pop	      bx
2   538	0156  58			    pop	      ax
    539	0157  FE 06 000Dr		     inc      Col
**Error** cuarto.ASM(156) Can't	address	with currently ASSUMEd segment registers
    540					     GotoXY   Col,Fil
1   541					    PushA
2   542	015B  50			    push      ax						     ;Guarda los todos los  +
    543				     registro en...
2   544	015C  53			    push      bx						     ;...la pila del	    +
    545				     programa.
2   546	015D  51			    push      cx						     ;Preparación para	    +
    547				     rutinas
2   548	015E  52			    push      dx						     ;Debe tener cuidado de +
    549				     llamar a la...
2   550	015F  56			    push      si						     ;...siguiente macro    +
    551				     (PopAllRegs) para...
2   552	0160  57			    push      di						     ;poner equilibrar la   +
    553				     pila...
2   554	0161  55			    push      bp						     ;...sino lo hace el    +
    555				     programa se cae...
2   556	0162  54			    push      sp						     ;...y da un error.
2   557	0163  1E			    push      ds						     ;Note que el último    +
    558				     elemento del pushallregs...
2   559	0164  06			    push      es						     ;...es el primer	    +
    560				     elemento en salir en popallregs.
2   561	0165  16			    push      ss
2   562	0166  9C			    pushf								     ;Guarda el	    +
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 11
cuarto.ASM



    563				     registro de banderas en la	pila.
1   564	0167  B4 02			    mov	      ah,02
1   565	0169  B7 00			    mov	      bh,00
1   566	016B  8A 16 000Dr		    mov	      dl,Col
**Error** cuarto.ASM(157) GOTOXY(4) Can't address with currently ASSUMEd segment registers
1   567	016F  8A 36 000Er		    mov	      dh,Fil
**Error** cuarto.ASM(157) GOTOXY(5) Can't address with currently ASSUMEd segment registers
1   568	0173  CD 10			    int	      10h
1   569					    PopA
2   570	0175  9D			    popf		     ;...la pila del programa.
2   571	0176  17			    pop	      ss	     ;Esto se hace después de la llamada a una rutina
2   572	0177  07			    pop	      es	     ;Debe tener cuidado de llamar a esta...
2   573	0178  1F			    pop	      ds	     ;...macro (PopAllRegs) para...
2   574	0179  5C			    pop	      sp	     ;poner equilibrar la pila...
2   575	017A  5D			    pop	      bp	     ;...solamente después de haber...
2   576	017B  5F			    pop	      di	     ;...llamado antes a pushallregs.
2   577	017C  5E			    pop	      si	     ; Sino se produce un error	en el programa.
2   578	017D  5A			    pop	      dx
2   579	017E  59			    pop	      cx
2   580	017F  5B			    pop	      bx
2   581	0180  58			    pop	      ax
    582					     PrintfS  Message	      ;imprimir	Message	terminada por el caracter $.
1   583	0181  BA 0000r			    lea	      dx,Message      ;Coloca la dirección del desplazamiento de la etiqueta	    +
    584				     DS:Message
1   585	0184  B4 09			    mov	      ah,09	     ;parámetro	09 del servicio	de int 21 (imprimir en pantalla	    +
    586				     cadena terminada en $)
1   587	0186  CD 21			    int	      21h	     ;ejecute la interrupción, e imprima en pantalla.
    588	0188  80 F9 0F			     cmp      cl,0fh	      ;todos los colores?
    589	018B  7C 0D			 jl  salto1		      ;no se puede mandar directamente a ciclo1.
    590					     PopA		      ;Saque todos los registros.
1   591	018D  9D			    popf		     ;...la pila del programa.
1   592	018E  17			    pop	      ss	     ;Esto se hace después de la llamada a una rutina
1   593	018F  07			    pop	      es	     ;Debe tener cuidado de llamar a esta...
1   594	0190  1F			    pop	      ds	     ;...macro (PopAllRegs) para...
1   595	0191  5C			    pop	      sp	     ;poner equilibrar la pila...
1   596	0192  5D			    pop	      bp	     ;...solamente después de haber...
1   597	0193  5F			    pop	      di	     ;...llamado antes a pushallregs.
1   598	0194  5E			    pop	      si	     ; Sino se produce un error	en el programa.
1   599	0195  5A			    pop	      dx
1   600	0196  59			    pop	      cx
1   601	0197  5B			    pop	      bx
1   602	0198  58			    pop	      ax
    603
    604	0199  CB			     ret		      ;Retorna el control al SO.
    605	019A  E9 FEA4		     salto1: jmp ciclo1		      ;salto extensivo a ciclo1. fuera del código está bajo el ret  +
    606				     al	SO.
    607	019D			      main EndP			      ;Fin del procedimiento principal main.
    608	019D			     CSeg EndS			      ;Fin del segmento	de código.
    609					  End main		      ;Fin del programa	la etiqueta al final dice en que punto debe +
    610				     comenzar el programa.
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 12
Symbol Table




Symbol Name			  Type	 Value

??0000				  Near	 CSEG:0083
??0001				  Near	 CSEG:00AD
??DATE				  Text	 "11/13/20"
??FILENAME			  Text	 "cuarto  "
??TIME				  Text	 "14:14:08"
??VERSION			  Number 040A
@CPU				  Text	 0101H
@CURSEG				  Text	 CSEG
@FILENAME			  Text	 CUARTO
@WORDSIZE			  Text	 2
CICLO1				  Near	 CSEG:0041
COL				  Byte	 SDATA:000D
FIL				  Byte	 SDATA:000E
MAIN				  Far	 CSEG:0000
MESSAGE				  Byte	 SDATA:0000
SALTO1				  Near	 CSEG:019A

Macro Name

CLEARSCREEN
GOTOXY
POPA
PRINTFC
PRINTFS
PRINTHEX
PUSHA
WHEREXY

Groups & Segments		  Bit Size Align  Combine Class

CSEG				  16  019D Para	  Public  CODE
SDATA				  16  000F Para	  none	  DATA
SSEG				  16  0240 Para	  Stack	  STACK
Turbo Assembler	 Version 4.1	    11/13/20 14:14:08	    Page 13
Error Summary



**Error** cuarto.ASM(151) WHEREXY(5) Can't address with	currently ASSUMEd segment registers
**Error** cuarto.ASM(151) WHEREXY(6) Can't address with	currently ASSUMEd segment registers
**Error** cuarto.ASM(152) Can't	address	with currently ASSUMEd segment registers
**Error** cuarto.ASM(153) GOTOXY(4) Can't address with currently ASSUMEd segment registers
**Error** cuarto.ASM(153) GOTOXY(5) Can't address with currently ASSUMEd segment registers
**Error** cuarto.ASM(155) WHEREXY(5) Can't address with	currently ASSUMEd segment registers
**Error** cuarto.ASM(155) WHEREXY(6) Can't address with	currently ASSUMEd segment registers
**Error** cuarto.ASM(156) Can't	address	with currently ASSUMEd segment registers
**Error** cuarto.ASM(157) GOTOXY(4) Can't address with currently ASSUMEd segment registers
**Error** cuarto.ASM(157) GOTOXY(5) Can't address with currently ASSUMEd segment registers
